-- MySQL Script generated by MySQL Workbench
-- Mon Apr 26 13:12:01 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `GRAD`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GRAD` ;

CREATE TABLE IF NOT EXISTS `GRAD` (
  `idGrad` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `naziv` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idGrad`),
  UNIQUE INDEX `idgrad_UNIQUE` (`idGrad` ASC) VISIBLE,
  UNIQUE INDEX `naziv_UNIQUE` (`naziv` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KATEGORIJA_PITANJA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KATEGORIJA_PITANJA` ;

CREATE TABLE IF NOT EXISTS `KATEGORIJA_PITANJA` (
  `idKategorijaPitanja` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `kategorija` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idKategorijaPitanja`),
  UNIQUE INDEX `idkategorijaPitanja_UNIQUE` (`idKategorijaPitanja` ASC) VISIBLE,
  UNIQUE INDEX `kategorija_UNIQUE` (`kategorija` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `KORISNIK`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KORISNIK` ;

CREATE TABLE IF NOT EXISTS `KORISNIK` (
  `idKorisnik` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(16) NOT NULL,
  `email` VARCHAR(255) NULL,
  `licnoIme` VARCHAR(64) NULL,
  `prikaziLicnoIme` BIT NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `tipKorisnika_idTipKorisnika` INT UNSIGNED NOT NULL,
  `grad_idGrad` INT UNSIGNED NULL,
  `pol_idPol` INT UNSIGNED NOT NULL,
  `slika` BLOB NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idKorisnik`),
  UNIQUE INDEX `id_UNIQUE` (`idKorisnik` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_korisnik_grad1_idx` (`grad_idGrad` ASC) VISIBLE,
  INDEX `fk_korisnik_pol1_idx` (`pol_idPol` ASC) VISIBLE,
  INDEX `fk_korisnik_tipKorisnika1_idx` (`tipKorisnika_idTipKorisnika` ASC) VISIBLE,
  CONSTRAINT `fk_korisnik_grad1`
    FOREIGN KEY (`grad_idGrad`)
    REFERENCES `GRAD` (`idGrad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_korisnik_pol1`
    FOREIGN KEY (`pol_idPol`)
    REFERENCES `POL` (`idPol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_korisnik_tipKorisnika1`
    FOREIGN KEY (`tipKorisnika_idTipKorisnika`)
    REFERENCES `TIP_KORISNIKA` (`idTipKorisnika`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `KORISNIK_OCENIO_ODGOVOR`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KORISNIK_OCENIO_ODGOVOR` ;

CREATE TABLE IF NOT EXISTS `KORISNIK_OCENIO_ODGOVOR` (
  `korisnik_idKorisnik` INT UNSIGNED NOT NULL,
  `odgovor_idOdgovor` INT UNSIGNED NOT NULL,
  `ocena` BIT NOT NULL,
  PRIMARY KEY (`korisnik_idKorisnik`, `odgovor_idOdgovor`),
  INDEX `fk_korisnik_ocenio_odgovor_odgovor1_idx` (`odgovor_idOdgovor` ASC) VISIBLE,
  INDEX `fk_korisnik_ocenio_odgovor_korisnik1_idx` (`korisnik_idKorisnik` ASC) VISIBLE,
  CONSTRAINT `fk_korisnik_ocenio_odgovor_korisnik1`
    FOREIGN KEY (`korisnik_idKorisnik`)
    REFERENCES `KORISNIK` (`idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_korisnik_ocenio_odgovor_odgovor1`
    FOREIGN KEY (`odgovor_idOdgovor`)
    REFERENCES `ODGOVOR` (`idOdgovor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `KORISNIK_OCENIO_PITANJE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KORISNIK_OCENIO_PITANJE` ;

CREATE TABLE IF NOT EXISTS `KORISNIK_OCENIO_PITANJE` (
  `korisnik_idKorisnik` INT UNSIGNED NOT NULL,
  `pitanje_idPitanje` INT UNSIGNED NOT NULL,
  `ocena` BIT NOT NULL COMMENT '1 na gore, 0 na dole',
  PRIMARY KEY (`korisnik_idKorisnik`, `pitanje_idPitanje`),
  INDEX `fk_korisnik_has_pitanje_pitanje1_idx` USING BTREE (`pitanje_idPitanje`) COMMENT 'Bitan indeks, jer nam on treba za dobijanje svih ocena nekog pitanja.' VISIBLE,
  INDEX `fk_korisnik_has_pitanje_korisnik1_idx` (`korisnik_idKorisnik` ASC) VISIBLE,
  CONSTRAINT `fk_korisnik_has_pitanje_korisnik1`
    FOREIGN KEY (`korisnik_idKorisnik`)
    REFERENCES `KORISNIK` (`idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_korisnik_has_pitanje_pitanje1`
    FOREIGN KEY (`pitanje_idPitanje`)
    REFERENCES `PITANJE` (`idPitanje`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION) PARTITION BY HASH(pitanje_idPitanje) PARTITIONS 1 ;


-- -----------------------------------------------------
-- Table `KORISNIK_OCENIO_PSIHOLOGA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KORISNIK_OCENIO_PSIHOLOGA` ;

CREATE TABLE IF NOT EXISTS `KORISNIK_OCENIO_PSIHOLOGA` (
  `korisnik_idKorisnik_ocenio` INT UNSIGNED NOT NULL,
  `korisnik_idKorisnik_ocenjen` INT UNSIGNED NOT NULL COMMENT 'Ovde se moze naci samo id korisnika koji je psiholog. Pre izvrsenja ocenjivanja, vrsi se ova provera.',
  `ocena` BIT NOT NULL,
  PRIMARY KEY (`korisnik_idKorisnik_ocenio`, `korisnik_idKorisnik_ocenjen`),
  INDEX `fk_korisnik_has_korisnik_korisnik2_idx` (`korisnik_idKorisnik_ocenjen` ASC) VISIBLE,
  INDEX `fk_korisnik_has_korisnik_korisnik1_idx` (`korisnik_idKorisnik_ocenio` ASC) VISIBLE,
  CONSTRAINT `fk_korisnik_has_korisnik_korisnik1`
    FOREIGN KEY (`korisnik_idKorisnik_ocenio`)
    REFERENCES `KORISNIK` (`idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_korisnik_has_korisnik_korisnik2`
    FOREIGN KEY (`korisnik_idKorisnik_ocenjen`)
    REFERENCES `KORISNIK` (`idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `KORISNIK_PRIJAVLJEN_NA_SEANSU`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `KORISNIK_PRIJAVLJEN_NA_SEANSU` ;

CREATE TABLE IF NOT EXISTS `KORISNIK_PRIJAVLJEN_NA_SEANSU` (
  `korisnik_idKorisnik` INT UNSIGNED NOT NULL,
  `seansa_idSeansa` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`korisnik_idKorisnik`, `seansa_idSeansa`),
  INDEX `fk_korisnik_prijavljen_na_seansu_seansa1_idx` (`seansa_idSeansa` ASC) VISIBLE,
  INDEX `fk_korisnik_prijavljen_na_seansu_korisnik1_idx` (`korisnik_idKorisnik` ASC) VISIBLE,
  CONSTRAINT `fk_korisnik_prijavljen_na_seansu_korisnik1`
    FOREIGN KEY (`korisnik_idKorisnik`)
    REFERENCES `KORISNIK` (`idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_korisnik_prijavljen_na_seansu_seansa1`
    FOREIGN KEY (`seansa_idSeansa`)
    REFERENCES `SEANSA` (`idSeansa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ODGOVOR`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODGOVOR` ;

CREATE TABLE IF NOT EXISTS `ODGOVOR` (
  `idOdgovor` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `pitanje_idPitanje` INT UNSIGNED NOT NULL,
  `korisnik_idKorisnik_odgovorio` INT UNSIGNED NOT NULL,
  `tekstOdgovora` TEXT NOT NULL,
  `odgovorenoAnonimno` BIT NOT NULL,
  PRIMARY KEY (`idOdgovor`),
  UNIQUE INDEX `idodgovor_UNIQUE` (`idOdgovor` ASC) VISIBLE,
  INDEX `fk_odgovor_pitanje1_idx` (`pitanje_idPitanje` ASC) VISIBLE,
  INDEX `fk_odgovor_korisnik1_idx` (`korisnik_idKorisnik_odgovorio` ASC) VISIBLE,
  CONSTRAINT `fk_odgovor_pitanje1`
    FOREIGN KEY (`pitanje_idPitanje`)
    REFERENCES `PITANJE` (`idPitanje`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_odgovor_korisnik1`
    FOREIGN KEY (`korisnik_idKorisnik_odgovorio`)
    REFERENCES `KORISNIK` (`idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PITANJE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PITANJE` ;

CREATE TABLE IF NOT EXISTS `PITANJE` (
  `idPitanje` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `korisnik_idKorisnik_postavio` INT UNSIGNED NOT NULL,
  `kategorijaPitanja_idKategorija` INT UNSIGNED NULL,
  `naslovPitanja` VARCHAR(128) NOT NULL,
  `tekstPitanja` TEXT NOT NULL,
  `postavljenoAnonimno` BIT NOT NULL COMMENT '\n',
  `moguSviDaOdgovore` BIT NOT NULL,
  PRIMARY KEY (`idPitanje`),
  INDEX `fk_pitanje_korisnik_idx` (`korisnik_idKorisnik_postavio` ASC) VISIBLE,
  INDEX `fk_pitanje_kategorijaPitanja1_idx` (`kategorijaPitanja_idKategorija` ASC) VISIBLE,
  CONSTRAINT `fk_pitanje_korisnik`
    FOREIGN KEY (`korisnik_idKorisnik_postavio`)
    REFERENCES `KORISNIK` (`idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pitanje_kategorijaPitanja1`
    FOREIGN KEY (`kategorijaPitanja_idKategorija`)
    REFERENCES `KATEGORIJA_PITANJA` (`idKategorijaPitanja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `POL`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `POL` ;

CREATE TABLE IF NOT EXISTS `POL` (
  `idPol` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `pol` VARCHAR(24) NOT NULL,
  PRIMARY KEY (`idPol`),
  UNIQUE INDEX `idpol_UNIQUE` (`idPol` ASC) VISIBLE,
  UNIQUE INDEX `pol_UNIQUE` (`pol` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PREPORUCENA_LITERATURA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PREPORUCENA_LITERATURA` ;

CREATE TABLE IF NOT EXISTS `PREPORUCENA_LITERATURA` (
  `idPreporucenaLiteratura` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nazivLiterature` VARCHAR(80) NOT NULL,
  `slikaLiterature` TINYBLOB NOT NULL,
  `opisLiterature` TINYTEXT CHARACTER SET 'ascii' NOT NULL,
  PRIMARY KEY (`idPreporucenaLiteratura`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SEANSA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SEANSA` ;

CREATE TABLE IF NOT EXISTS `SEANSA` (
  `idSeansa` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `korisnik_idKorisnik_organizator` INT UNSIGNED NOT NULL,
  `nazivSeanse` VARCHAR(80) NOT NULL,
  `opisSeanse` TEXT NOT NULL,
  `maxBrojPrijavljenih` TINYINT NOT NULL,
  `trenutanBrojPrijavljenih` TINYINT GENERATED ALWAYS AS (SELECT COUNT(*) FROM korisnik_prijavljen_na_seansu kpns, seansa s WHERE s.idseansa = kpns.seansa_idseansa) VIRTUAL,
  `datumPocetka` DATE NOT NULL,
  `vremePocetka` TIME NOT NULL,
  `zoomLink` VARCHAR(255) NULL,
  PRIMARY KEY (`idSeansa`),
  UNIQUE INDEX `idseansa_UNIQUE` (`idSeansa` ASC) VISIBLE,
  INDEX `fk_seansa_korisnik1_idx` (`korisnik_idKorisnik_organizator` ASC) INVISIBLE,
  INDEX `date` (`datumPocetka` ASC, `vremePocetka` ASC) VISIBLE,
  CONSTRAINT `fk_seansa_korisnik1`
    FOREIGN KEY (`korisnik_idKorisnik_organizator`)
    REFERENCES `KORISNIK` (`idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB PARTITION BY RANGE(datumPocetka, vremePocetka) PARTITIONS 10 SUBPARTITION BY Disable() () ;


-- -----------------------------------------------------
-- Table `TIP_KORISNIKA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TIP_KORISNIKA` ;

CREATE TABLE IF NOT EXISTS `TIP_KORISNIKA` (
  `idTipKorisnika` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `tip` VARCHAR(16) NOT NULL,
  PRIMARY KEY (`idTipKorisnika`),
  UNIQUE INDEX `tip_UNIQUE` (`tip` ASC) VISIBLE,
  UNIQUE INDEX `idtipKorisnika_UNIQUE` (`idTipKorisnika` ASC) VISIBLE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
